// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pav.TpFinal.Infraestructura.Datos;

#nullable disable

namespace Pav.TpFinal.Infraestructura.Datos.Migrations
{
    [DbContext(typeof(PavTpFinalContext))]
    [Migration("20240809002301_Migracion-Inicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Empleado", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Domicilio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Empleados", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7ea7d14-815b-4456-85c4-38797129c9c9"),
                            Documento = "12345678",
                            Domicilio = "Tucumán",
                            Nombre = "Luis"
                        },
                        new
                        {
                            Id = new Guid("5e28d916-2da9-47e4-ae92-575bf0f39dca"),
                            Documento = "87654321",
                            Domicilio = "Tucumán",
                            Nombre = "María"
                        });
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Especie", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PorcentajePesoCarne")
                        .HasColumnType("float");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Especies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("63d662d8-146d-4008-b39c-6e5c1cd69a20"),
                            Codigo = 1,
                            Nombre = "León",
                            PorcentajePesoCarne = 0.69999999999999996,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("19e3ed45-e594-41b3-8bae-fa0c103dec49"),
                            Codigo = 2,
                            Nombre = "Jirafa",
                            PorcentajePesoCarne = 0.0,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("8b31d8da-2739-470d-853b-252bedf06259"),
                            Codigo = 3,
                            Nombre = "Tigre",
                            PorcentajePesoCarne = 0.5,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("afc60bb5-a80f-482c-ba26-c93403030160"),
                            Codigo = 4,
                            Nombre = "Rinoceronte",
                            PorcentajePesoCarne = 0.0,
                            TipoAlimentacion = 1
                        });
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Mamifero", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<Guid?>("EspecieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OrigenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Peso")
                        .HasPrecision(6, 2)
                        .HasColumnType("float(6)");

                    b.Property<Guid?>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("SectorId");

                    b.ToTable("Mamiferos", (string)null);

                    b.HasDiscriminator<int>("TipoAlimentacion");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Pais", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("82740fb1-fb05-446f-8e50-ed5aa38bb824"),
                            Nombre = "Sudáfrica"
                        },
                        new
                        {
                            Id = new Guid("054e3ed8-5dbe-4056-9ff3-baddf3c550b0"),
                            Nombre = "Australia"
                        },
                        new
                        {
                            Id = new Guid("6c64f000-406b-43a1-8359-8195a6a006e3"),
                            Nombre = "Singapur"
                        },
                        new
                        {
                            Id = new Guid("f5ab1981-6085-4a2d-b08b-82d32ed7daf2"),
                            Nombre = "Canadá"
                        });
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Sector", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitud")
                        .HasPrecision(10, 8)
                        .HasColumnType("float(10)");

                    b.Property<int>("Limite")
                        .HasColumnType("int");

                    b.Property<double>("Longitud")
                        .HasPrecision(10, 8)
                        .HasColumnType("float(10)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Sectores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7525a7f1-d3d3-432c-a80c-b2cebc403962"),
                            EmpleadoId = new Guid("b7ea7d14-815b-4456-85c4-38797129c9c9"),
                            Latitud = -26.250724000000002,
                            Limite = 10,
                            Longitud = -65.522827000000007,
                            Numero = 1,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("2a8a5405-fda0-4652-94af-2bf804fb8c6e"),
                            EmpleadoId = new Guid("b7ea7d14-815b-4456-85c4-38797129c9c9"),
                            Latitud = -26.252358999999998,
                            Limite = 10,
                            Longitud = -65.521511000000004,
                            Numero = 2,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("e1baf61a-27f8-45e4-97ae-9d7cb232a97a"),
                            EmpleadoId = new Guid("5e28d916-2da9-47e4-ae92-575bf0f39dca"),
                            Latitud = -26.254660999999999,
                            Limite = 10,
                            Longitud = -65.522726000000006,
                            Numero = 3,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("a33c0338-44ba-47ca-82aa-96ac66498d0d"),
                            EmpleadoId = new Guid("5e28d916-2da9-47e4-ae92-575bf0f39dca"),
                            Latitud = -26.257249999999999,
                            Limite = 10,
                            Longitud = -65.523514000000006,
                            Numero = 4,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("06edc761-d2d7-4200-aa31-67015b41b0e6"),
                            EmpleadoId = new Guid("5e28d916-2da9-47e4-ae92-575bf0f39dca"),
                            Latitud = -26.257249999999999,
                            Limite = 10,
                            Longitud = -65.523514000000006,
                            Numero = 5,
                            TipoAlimentacion = 0
                        });
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Carnivoro", b =>
                {
                    b.HasBaseType("Pav.TpFinal.Dominio.Entidades.Mamifero");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Herbivoro", b =>
                {
                    b.HasBaseType("Pav.TpFinal.Dominio.Entidades.Mamifero");

                    b.Property<double>("ValorFijo")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Mamifero", b =>
                {
                    b.HasOne("Pav.TpFinal.Dominio.Entidades.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId");

                    b.HasOne("Pav.TpFinal.Dominio.Entidades.Pais", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId");

                    b.HasOne("Pav.TpFinal.Dominio.Entidades.Sector", "Sector")
                        .WithMany("Animales")
                        .HasForeignKey("SectorId");

                    b.Navigation("Especie");

                    b.Navigation("Origen");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Sector", b =>
                {
                    b.HasOne("Pav.TpFinal.Dominio.Entidades.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Pav.TpFinal.Dominio.Entidades.Sector", b =>
                {
                    b.Navigation("Animales");
                });
#pragma warning restore 612, 618
        }
    }
}
